def isLibrary = BuildConfig.isRelease
plugins.apply('org.jetbrains.kotlin.android')
plugins.apply('kotlin-kapt')
if (isLibrary) {
    plugins.apply('com.android.library')
} else {
    plugins.apply('com.android.application')
}

android {
    namespace 'com.handsome.module.podcast'
    compileSdk BuildConfig.compileSdk

    defaultConfig {
        if (!isLibrary) {
            applicationId "com.handsome.module.podcast"
            versionCode BuildConfig.versionCode
            versionName BuildConfig.versionName
        }
//        applicationId = "com.handsome.module.podcast"
        minSdk BuildConfig.minSdk
        targetSdk BuildConfig.targetSdk

        testInstrumentationRunner BuildConfig.testInstrumentationRunner
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        }
    }
    compileOptions {
        //AGP8.0及以上
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = "17"
    }
    sourceSets {
        main {
            if (isLibrary) {
                //集成模式
                manifest.srcFile 'src/main/AndroidManifest.xml'
                //排除掉debug包的信息
                java {
                    exclude 'src/main/debug'
                }

            } else {
                //组件化模式
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
                java.srcDirs = ['src/main/debug', 'src/main/java']
            }
        }
    }
    viewBinding {
        enabled = true
    }
}
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

dependencies {

    implementation(project(":lib_util"))
    implementation(project(":lib_music"))

    kapt ARouter.arouter_compiler
    implementation(Network.retrofit)
    implementation(Rxjava.rxjava3_android)
    implementation(Rxjava.rxjava3_kotlin)
    implementation(Lifecycle.viewmodel_ktx)
    implementation(Lifecycle.runtime_ktx)
    implementation(Network.gson)
    implementation(Network.converter_gson)
    implementation(Network.okhttp)
    implementation(Paging.paging_runtime)
    implementation(Android.recyclerview)
}